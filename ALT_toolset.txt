function read_annotation_file(filepath){
        open(filepath);
        selectWindow(File.name);
        getLocationAndSize(x, y, width, height);
        setLocation(screenWidth/2 - width/2, 10, width*(screenHeight-40)/height, screenHeight-40); 
    
        temp = File.nameWithoutExtension;
        fn = File.name;
        path = File.directory;
        textPath = path+temp+".txt";
        call("ij.Prefs.set", "my.path", path);
        call("ij.Prefs.set", "my.filename", fn);
        roiManager("show all with labels");

        if (File.exists(textPath)) {            
            lineseparator = "\n";
            cellseparator = "\t";
            lines=split(File.openAsString(textPath), lineseparator);                        

            // dispatches the data into the new RT
            setBatchMode(true);
            for (i=0; i<lines.length; i++) {
                items=split(lines[i], cellseparator);
                makePolygon(items[1], items[2], items[3], items[4], items[5], items[6], items[7], items[8]);
                Roi.setStrokeWidth(1);
                Roi.setStrokeColor('green');
                Roi.setName(items[0]);
                roiManager("Add");
            }
            roiManager("show all");
            if (lines.length > 1) 
                roiManager("select", 0);

        }
        
        set_and_zoom();
    }

function indexOfArray(array, value) {
    for (a=0; a<lengthOf(array); a++) {
        if (array[a]==value) {
            return a;
        }
    }
    return -1;
}

function set_and_zoom(){
    setTool("Rectangle");        
}    

function close_all(){
    if (isOpen("Log")) { 
        selectWindow("Log"); 
        run("Close"); 
    }

    list = getList("window.titles"); 
    for (i=0; i<list.length; i++){ 
        winame = list[i]; 
        selectWindow(winame); 
        if (winame!="new action bar"){
            run("Close"); 
        }	 
    }
}


function clear_all(){
    close("*");
    if (isOpen("ROI Manager")) {
        selectWindow("ROI Manager");
        run("Close");
    } 
}

function get_image_list(myPath){                
    list = getFileList(myPath);
    imglist = newArray();
    for (i=0; i<list.length; ++i) {
        if (endsWith(list[i], ".jpg") || endsWith(list[i], ".png") || endsWith(list[i], ".jpeg")) {
            imglist=Array.concat(imglist,list[i]);
        }
    }
    return imglist;
}

function alt_open(){
    clear_all();
    filepath=File.openDialog("CHOOSE THE IMAGE TO EDIT / CREATE LABELS");
    read_annotation_file(filepath);
    set_and_zoom();
}

function alt_save(){
    mainTitle = getTitle();
    setBatchMode(true);
    output_dir = getDirectory("image");
    title1 = "annotation_table";
    title2 = "[" + title1 + "]";
    run("New... ", "name=" + title2 + " type=Table"); 

    nCount = roiManager('count')            
    for (i=0; i<nCount; ++i) { 
        roiManager("select", i)
        Roi.getCoordinates(x,y);
        labeltype = Roi.getName;
        print(title2, labeltype + "\t" + x[0] + "\t" + y[0] + "\t" + x[1]+ "\t" + y[1] + "\t" + x[2] + "\t" + y[2] + "\t" + x[3] + "\t" + y[3] + "\t" );
    }
    selectWindow(title1);
    newtitle = replace(mainTitle, ".jpg", ".txt");
    saveAs("text", output_dir + File.separator + newtitle);
    selectWindow(title1);
    run("Close");
}

function alt_prev(){
    myPath = call("ij.Prefs.get", "my.path", 0);
    myFilename = call("ij.Prefs.get", "my.filename", 1);
    imglist = get_image_list(myPath);
    fileorder = indexOfArray(imglist, myFilename);
    if (fileorder > 0) {
        fileorder = fileorder - 1;
    }else {
        fileorder = imglist.length - 1;
    }
    myFilename=imglist[fileorder]; 

    clear_all();
    read_annotation_file(myPath+File.separator+myFilename);
}

function alt_next(){
    myPath = call("ij.Prefs.get", "my.path", 0);
    myFilename = call("ij.Prefs.get", "my.filename", 1);
    imglist = get_image_list(myPath);
    fileorder=indexOfArray(imglist, myFilename);        
    if (fileorder < imglist.length-1) {
        fileorder = fileorder + 1;
    }else {
        fileorder = 0;
    }
    myFilename=imglist[fileorder];

    clear_all(); 
    read_annotation_file(myPath+File.separator+myFilename);
}

function alt_add(){
    if (getInfo("selection.name") != "") {        
           waitForUser("This region has label");    
    }else{
        size = getValue("selection.size");
        if (size == 0 ){
            waitForUser("There are no selected region");    
        }else{
            getSelectionCoordinates(x, y);    
            if (x.length < 4){
                exit('Box label need 4 point')
            }else{
                makePolygon(x[0], y[0], x[1], y[1], x[2], y[2], x[3], y[3]);
            }
            Dialog.create("New label");
            Dialog.addString("Text:", "");
            Dialog.show();
            label = Dialog.getString();
            Roi.setName(label);
            roiManager("Add");
            roiManager("show all");
        }
    }
}

function alt_delete(){
    if (getInfo("selection.name") == "") {
        selection_size = getValue("selection.size");
        if (selection_size == 0){
            waitForUser("There are no selected region");    
        }else{
            setBatchMode(true);
            getSelectionBounds(x,y, width, height);        
            bottom_right_x = x + width;
            bottom_right_y = y + height ; 
            nCount = roiManager('count');
            for (i = nCount-1 ; i >= 0 ; i --){
                roiManager('select', i);
                Roi.getBounds(bx, by, bwidth, bheight)	
                if( x <= bx && y<= by && bx + bwidth <= bottom_right_x && by+bheight <= bottom_right_y){
                    roiManager('delete'); 
                    Roi.remove;
                }
            }
        }
    }else{
        roiManager('delete');
    }

}

function alt_edit(){
    if (getInfo("selection.name") == ""){
        waitForUser("There are no selected region");
    }else{
        old_fill_color = Roi.getFillColor();
        Roi.setFillColor("5500ff00")
        Dialog.create("edit label");
        Dialog.addString("Text:", Roi.getName);
        Dialog.show();
        label = Dialog.getString();
        Roi.setName(label);
        roiManager("rename", label);
        Roi.setFillColor(old_fill_color)
        roiManager("show all");
    }
}

function alt_find(){
    if (getInfo("selection.name") == ""){
        waitForUser("There are no selected region");
    }else{
        old_fill_color = Roi.getFillColor();    
        for ( i = 0 ; i < 5 ; i ++ ){            
            Roi.setFillColor("5500ff00");         
            wait(100);
            Roi.setFillColor("55ff4400");
            wait(100);
        }
        Roi.setFillColor(old_fill_color);
    }
}

macro "Open file... [o]" {
    alt_open();
}

macro "Save file... [s]"{
    alt_save();		
}

macro "Prev image... [p]"{
    alt_prev();
}

macro "Next image... [n]"{
    alt_next();
}

macro "Add polygon... [a]"{
    alt_add();
}

macro "Delete polygon... [d]"{
    alt_delete();
}

macro "update polygon... [e]"{
    alt_edit();
}

macro "Find polygon... [f]"{
    alt_find();
}